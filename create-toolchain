#!/bin/bash
set -e
shopt -s extglob
cd "$(dirname "$0")"

if [[ $# -ne 2 ]]; then 
	echo "Usage: $0 <swift version> <linux version such as ubuntu16.10>"
	exit 1
fi

info() { echo "[info] $1"; }

version="$1"
file_name_mac="swift-${version}-RELEASE-osx"
file_name_linux="swift-${version}-RELEASE-$2"
url_mac="https://swift.org/builds/swift-${version}-release/xcode/swift-${version}-RELEASE/${file_name_mac}.pkg"
url_linux="https://swift.org/builds/swift-${version}-release/${2/./}/swift-${version}-RELEASE/${file_name_linux}.tar.gz"
package="${file_name_mac}-package.pkg"
platform="$(uname -s)"

mkdir -p toolchains
cd toolchains

info "Downloading macOS toolchain"
if [[ ! -f "toolchain-mac-${version}.pkg" ]]; then
	curl -#o "toolchain-mac-${version}.pkg" $url_mac
fi

info "Unpacking macOS toolchain"
rm -rf mac
mkdir -p out
7z x "toolchain-mac-${version}.pkg"
7z x Payload\~ -oout
mv out/usr ./mac
rm -rf out "toolchain-mac-${version}.pkg" Payload\~

info "Downloading Linux toolchain"
if [[ ! -f "toolchain-$2-${version}.tar.gz" ]]; then
	curl -#o "toolchain-$2-${version}.tar.gz" $url_linux
fi

info "Unpacking Linux toolchain"
# remove any pre-existing usr dir first
rm -rf linux
tar -xzf "toolchain-$2-${version}.tar.gz"
mv "${file_name_linux}/usr" .
rm -rf "${file_name_linux}"

info "Modifying Linux toolchain"
rm -rf usr/lib/swift/!(clang|migrator|shims) usr/lib/swift_static/*
cp -a mac/lib/swift/iphoneos usr/lib/swift/
cp -a mac/lib/swift_static/iphoneos usr/lib/swift_static/
rm -rf mac

info "Packaging toolchain"
mkdir -p ../packages
mv usr swift
tar -czf "../packages/swift-${version}-$2.tar.gz" swift
rm -rf swift
